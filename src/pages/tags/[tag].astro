---
import BaseLayout from "../../layouts/BaseLayout.astro";
import ArchivePostList from "../../layouts/ArchivePostList.astro";

const { tag } = Astro.params;
const { posts } = Astro.props;

export async function getStaticPaths() {
  // ⭐ 关键修正：修改 Astro.glob 的参数
  const allPosts = await Astro.glob([
    '../posts/**/*.md',           // 包含 posts 目录下的所有 .md 文件
  ]);
  // ⭐ 日志 2: 检查收集到的所有标签
  // 使用 .flatMap(post => post.frontmatter.tags || []) 来安全地处理没有tags字段的文章
  const allTags = allPosts.flatMap(post => post.frontmatter.tags || []);
  const uniqueTags = [...new Set(allTags)].filter(tag => tag); // 过滤掉 null, undefined 等无效标签
  // const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
  
  console.log(`[getStaticPaths] Found ${uniqueTags.length} unique, valid tags:`);
  console.log(uniqueTags); // 直接打印数组，便于检查
  console.log(allTags); // 直接打印数组，便于检查
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag)).sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));;
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

---

<BaseLayout primaryTitle={tag}>
  <section class="archive">
    <div class="section-content section-tag">
      <div class="archive-tag">
        <h2 class="tag-header">{tag}</h2>
        <div class="tag-post-list">{
        posts.length !== 0 ? <ArchivePostList posts={posts} /> : <div class="no-posts">暂无文章</div>}</div>
      </div>
    </div>
  </section>
</BaseLayout>
